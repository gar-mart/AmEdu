<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <Description>Angular startup template for FreedomDev Development</Description>
    <Copyright>Copyright © 2021 https://freedomdev.com</Copyright>
    <PackageProjectUrl>https://freedomdev.com</PackageProjectUrl>
    <Company>FreedomDev</Company>
    <Version>1.0.0.0</Version>
    <AssemblyName>Web</AssemblyName>
    <RootNamespace>Web</RootNamespace>
    <Configurations>Debug;Release</Configurations>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="12.0.1" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="12.0.0" />
    <PackageReference Include="Azure.Extensions.AspNetCore.DataProtection.Blobs" Version="1.3.2" />
    <PackageReference Include="Azure.Extensions.AspNetCore.DataProtection.Keys" Version="1.2.2" />
    <PackageReference Include="CsvHelper" Version="27.2.1" />
    <PackageReference Include="FD.Base.Shared.Web" Version="3.0.0.1" />
    <PackageReference Include="FluentValidation.AspNetCore" Version="11.2.2" />
    <PackageReference Include="Flurl" Version="3.0.7" />
    <PackageReference Include="Flurl.Http" Version="3.2.4" />
    <PackageReference Include="Flurl.Http.Xml" Version="2.0.0" />
    <PackageReference Include="Google.Apis.Calendar.v3" Version="1.60.0.3017" />
    <PackageReference Include="MailKit" Version="3.5.0" /> 
    <PackageReference Include="Microsoft.AspNetCore.Authentication.Google" Version="7.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.MicrosoftAccount" Version="7.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.DataProtection" Version="6.0.24" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="7.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.JsonPatch" Version="7.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" Version="7.0.0" /> 
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="7.0.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="7.0.0">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="7.0.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="7.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Rin" Version="2.6.0" />
    <PackageReference Include="Rin.Mvc" Version="2.6.0" />
    <PackageReference Include="Serilog.Extensions.Logging.File" Version="3.0.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.5.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.Swagger" Version="6.5.0" />
    <PackageReference Include="System.Linq.Async" Version="6.0.1" />
    <PackageReference Include="TaskTupleAwaiter" Version="2.0.2" />
    <PackageReference Include="TimeZoneConverter" Version="6.1.0" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="ClientApp\.angular\**" />
    <Compile Remove="ClientApp\dist\**" />
    <Compile Remove="Logs\**" />
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="ClientApp\.angular\**" />
    <Content Remove="ClientApp\dist\**" />
    <Content Include="ClientApp\src\assets\favicon.ico">
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Include="ClientApp\tsconfig.app.json" />
    <Content Include="ClientApp\tsconfig.json"><CopyToOutputDirectory>Never</CopyToOutputDirectory></Content>
    <Content Include="ClientApp\tsconfig.spec.json" />
    <Content Remove="Logs\**" />
    <Content Include="Rotativa\wkhtmltoimage.exe"><CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory></Content>
    <Content Include="Rotativa\wkhtmltopdf.exe"><CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory></Content>
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    <None Remove="ClientApp\src\assets\favicon.ico" />
    <None Remove="ClientApp\tsconfig.app.json" />
    <None Remove="ClientApp\tsconfig.json" />
    <None Remove="ClientApp\tsconfig.spec.json" />
    <None Remove="Rotativa\wkhtmltoimage.exe" />
    <None Remove="Rotativa\wkhtmltopdf.exe" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Remove="ClientApp\.angular\**" />
    <EmbeddedResource Remove="ClientApp\dist\**" />
    <EmbeddedResource Remove="Logs\**" />
    <None Remove="ClientApp\.angular\**" />
    <None Remove="ClientApp\dist\**" />
    <None Remove="Logs\**" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\Repository\Repository.csproj" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --configuration production" Condition=" '$(EnvironmentName)' != 'Testing' " />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --configuration production" Condition=" '$(BuildServerSideRenderer)' == 'true' And '$(EnvironmentName)' != 'Testing' " />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --configuration testing" Condition=" '$(EnvironmentName)' == 'Testing' " />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --configuration testing" Condition=" '$(BuildServerSideRenderer)' == 'true' And '$(EnvironmentName)' == 'Testing' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles-&gt;'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <ProjectExtensions>
    <VisualStudio>
      <UserProperties clientapp_4angular_1json__JsonSchema="https://json.schemastore.org/global.json" />
    </VisualStudio>
  </ProjectExtensions>

</Project>